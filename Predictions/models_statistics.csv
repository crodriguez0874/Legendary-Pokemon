data_set,model,test_accuracy,parameters
original,K-Nearest-Neighbor,0.99825,"<bound method BaseEstimator.get_params of RandomizedSearchCV(cv=5, error_score='raise-deprecating',
                   estimator=KNeighborsClassifier(algorithm='kd_tree',
                                                  leaf_size=30,
                                                  metric='minkowski',
                                                  metric_params=None,
                                                  n_jobs=None, n_neighbors=5,
                                                  p=1, weights='uniform'),
                   iid='warn', n_iter=20, n_jobs=1,
                   param_distributions={'leaf_size': [480, 540, 600, 660, 720],
                                        'n_neighbors': range(1, 7)},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring=None, verbose=0)>"
offensive_defensive,K-Nearest-Neighbor,0.9945,"<bound method BaseEstimator.get_params of RandomizedSearchCV(cv=5, error_score='raise-deprecating',
                   estimator=KNeighborsClassifier(algorithm='kd_tree',
                                                  leaf_size=30,
                                                  metric='minkowski',
                                                  metric_params=None,
                                                  n_jobs=None, n_neighbors=5,
                                                  p=1, weights='uniform'),
                   iid='warn', n_iter=20, n_jobs=1,
                   param_distributions={'leaf_size': [480, 540, 600, 660, 720],
                                        'n_neighbors': range(1, 7)},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring=None, verbose=0)>"
total,K-Nearest-Neighbor,0.99275,"<bound method BaseEstimator.get_params of RandomizedSearchCV(cv=5, error_score='raise-deprecating',
                   estimator=KNeighborsClassifier(algorithm='kd_tree',
                                                  leaf_size=30,
                                                  metric='minkowski',
                                                  metric_params=None,
                                                  n_jobs=None, n_neighbors=5,
                                                  p=1, weights='uniform'),
                   iid='warn', n_iter=20, n_jobs=1,
                   param_distributions={'leaf_size': [480, 540, 600, 660, 720],
                                        'n_neighbors': range(1, 7)},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring=None, verbose=0)>"
isomap,Gradient Boosting Ensemble,0.99625,"<bound method BaseEstimator.get_params of RandomizedSearchCV(cv=5, error_score='raise-deprecating',
                   estimator=GradientBoostingClassifier(criterion='friedman_mse',
                                                        init=None,
                                                        learning_rate=0.1,
                                                        loss='deviance',
                                                        max_depth=3,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_impurity_split=None,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        n_estimators=100,
                                                        n_i...
                   param_distributions={'learning_rate': [0.01, 0.02, 0.03,
                                                          0.04, 0.05, 0.06,
                                                          0.07, 0.08, 0.09,
                                                          0.1],
                                        'max_depth': [5, 6, 6, 6, 7, 8, 8, 8, 9,
                                                      10],
                                        'min_samples_leaf': [240, 270, 300, 330,
                                                             360],
                                        'min_samples_split': [1200, 1320, 1440,
                                                              1560, 1680, 1800,
                                                              1920, 2040, 2160,
                                                              2280, 2400],
                                        'n_estimators': [800, 900, 1000, 1100,
                                                         1200]},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring=None, verbose=0)>"
PCA,K-Nearest-Neighbor,0.994,"<bound method BaseEstimator.get_params of RandomizedSearchCV(cv=5, error_score='raise-deprecating',
                   estimator=KNeighborsClassifier(algorithm='kd_tree',
                                                  leaf_size=30,
                                                  metric='minkowski',
                                                  metric_params=None,
                                                  n_jobs=None, n_neighbors=5,
                                                  p=1, weights='uniform'),
                   iid='warn', n_iter=20, n_jobs=1,
                   param_distributions={'leaf_size': [480, 540, 600, 660, 720],
                                        'n_neighbors': range(1, 7)},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring=None, verbose=0)>"
poly_KPCA,Gradient Boosting Ensemble,0.99475,"<bound method BaseEstimator.get_params of RandomizedSearchCV(cv=5, error_score='raise-deprecating',
                   estimator=GradientBoostingClassifier(criterion='friedman_mse',
                                                        init=None,
                                                        learning_rate=0.1,
                                                        loss='deviance',
                                                        max_depth=3,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_impurity_split=None,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        n_estimators=100,
                                                        n_i...
                   param_distributions={'learning_rate': [0.24, 0.27, 0.3, 0.33,
                                                          0.36, 0.39],
                                        'max_depth': [44, 50, 55, 60, 66],
                                        'min_samples_leaf': [240, 270, 300, 330,
                                                             360],
                                        'min_samples_split': [1200, 1320, 1440,
                                                              1560, 1680, 1800,
                                                              1920, 2040, 2160,
                                                              2280, 2400],
                                        'n_estimators': [960, 1080, 1200, 1320,
                                                         1440]},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring=None, verbose=0)>"
RBF_KPCA,Support Vector Machine,0.996,"<bound method BaseEstimator.get_params of RandomizedSearchCV(cv=5, error_score='raise-deprecating',
                   estimator=SVC(C=1.0, cache_size=200, class_weight=None,
                                 coef0=0.0, decision_function_shape='ovr',
                                 degree=3, gamma='auto_deprecated',
                                 kernel='rbf', max_iter=-1, probability=False,
                                 random_state=None, shrinking=True, tol=0.001,
                                 verbose=False),
                   iid='warn', n_iter=20, n_jobs=1,
                   param_distributions={'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x0000023323CBB6D8>,
                                        'gamma': <scipy.stats._distn_infrastructure.rv_frozen object at 0x0000023323C9DAC8>},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring=None, verbose=0)>"
cosine_KPCA,Gradient Boosting Ensemble,0.985,"<bound method BaseEstimator.get_params of RandomizedSearchCV(cv=5, error_score='raise-deprecating',
                   estimator=GradientBoostingClassifier(criterion='friedman_mse',
                                                        init=None,
                                                        learning_rate=0.1,
                                                        loss='deviance',
                                                        max_depth=3,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_impurity_split=None,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        n_estimators=100,
                                                        n_i...
                                                        verbose=0,
                                                        warm_start=False),
                   iid='warn', n_iter=20, n_jobs=1,
                   param_distributions={'learning_rate': [0.16, 0.18, 0.2, 0.22,
                                                          0.24],
                                        'max_depth': [48, 54, 60, 66, 72],
                                        'min_samples_leaf': [48, 54, 60, 66,
                                                             72],
                                        'min_samples_split': [48, 54, 60, 66,
                                                              72],
                                        'n_estimators': [640, 720, 800, 880,
                                                         960]},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring=None, verbose=0)>"
